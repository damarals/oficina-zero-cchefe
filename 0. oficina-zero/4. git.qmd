---
format: 
  revealjs:
    width: 1280
    height: 720
    theme: assets/style.scss
center: true
---

## Oficina Zero {.title-slide}

Introdução ao Git

---

## O que é Git?

- Sistema de controle de versão
- Criado por Linus Torvalds em 2005
- Essencial para colaboração em projetos de software

## Por que usar Git?

- Rastreia mudanças no código
- Facilita colaboração em equipe
- Permite experimentar sem medo
- Mantém um histórico completo do projeto

## Conceitos Básicos

- **Repositório**: Conjunto de arquivos e seu histórico de versões
- **Commit**: Grupo de alterações salvas em um determinado momento
- **Branch**: Linha independente de desenvolvimento
- **Merge**: Combinação de alterações de diferentes branches

## Fluxo de Trabalho Git

Veja o diagrama abaixo para entender o fluxo típico de trabalho com o Git:

```{mermaid}
flowchart LR;
    A(Diretório de Trabalho) --> |"git add"| B(Área de Preparação);
    B --> |"git commit"| C(Commit);
    C --> |"Armazenado em"| D(Repositório Git Local);

    subgraph Máquina Local
        A
        B
        C
        D
    end

    D --> |"git push"| E(Repositório Remoto);
```

## Comandos Essenciais

Aqui estão alguns dos comandos Git mais importantes:

```
git init
git add
git commit
git status
git push
```

## Branches

- Linhas independentes de desenvolvimento
- Permitem trabalhar em funcionalidades isoladas
- Facilitam experimentos sem afetar o código principal

## Mesclagem (Merge)

- Combina mudanças de diferentes branches
- Integra novas funcionalidades ao código principal
- Pode requerer resolução de conflitos

## Repositórios Remotos

- Permitem colaboração entre equipes
- Servem como backup do seu código
- Exemplos: GitHub, GitLab, Bitbucket

## Próximos Passos

- Praticar comandos básicos
- Explorar branches e merges
- Experimentar com repositórios remotos
- Integrar Git ao seu fluxo de trabalho em ciência de dados

## Obrigado! {.thanks-slide}

Perguntas?